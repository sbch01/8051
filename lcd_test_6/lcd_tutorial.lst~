lcd_tutorial                                                                                                            PAGE 1
                         1     ;-----------------------------------------------------------------------------
                         2     ;Here is LCD Tutorial for 8051 MCU
                         3     ;
                         4     ;
                         5     ;------------------------------------------------------------------------------
                         6
                         7     ORG     0000H   ;
0000 802E                8             SJMP Initial
                         9
                        10     ;ORG    000BH   ;
                        11     ;       SJMP TMR0_INTR  ;
                        12
                        13     ;ORG    001BH   ;
                        14     ;       SJMP TMR1_INTR  ;
                        15
                        16     ;ORG    0003H   ;
                        17     ;       SJMP INT0_INTR ;
                        18
                        19     ;ORG    0013H ;
                        20     ;       SJMP INT1_INTR  ;
                        21
                        22     ;ORG    0023H   ;
                        23     ;       SJMP UART_INT   ;
                        24
  0030                  25     DECRES  EQU 30H ;
  0002                  26     MYBIT   EQU 02H ;
                        27             ORG 0030H ;
                        28
                        29     Initial:
                        30
0030 116B               31             ACALL LCD_init
                        32
0032 7480               33             MOV A,#DD_RAM_ADDR1
0034 1196               34             ACALL LCD_command
                        35
0036 7453               36             MOV A,#'S'
0038 11A3               37             ACALL LCD_sendchar
                        38
003A 74C0               39             MOV A,#DD_RAM_ADDR2
003C 1196               40             ACALL LCD_command
                        41
003E 7442               42             MOV A,#'B'
0040 11A3               43             ACALL LCD_sendchar
                        44
0042 7401               45             MOV A,#CLR_DISP
0044 1196               46             ACALL LCD_command
                        47
0046 740E               48             MOV A,#DISP_ON_CUR
0048 1196               49             ACALL LCD_command
                        50
004A 7480               51             MOV A,#DD_RAM_ADDR1
004C 1196               52             ACALL LCD_command
                        53
004E 900200             54             MOV DPTR,#STR1
0051 11BE               55             ACALL LCD_sendstr
                        56
0053 900210             57             MOV DPTR,#BELL
0056 11B0               58             ACALL LCD_buildchar
                        59
0058 7401               60             MOV A,#CLR_DISP
005A 1196               61             ACALL LCD_command
                        62
005C 740C               63             MOV A,#DISP_ON
005E 1196               64             ACALL LCD_command
                        65
0060 7480               66             MOV A,#DD_RAM_ADDR1
0062 1196               67             ACALL LCD_command
                        68
0064 7400               69             MOV A,#0H
0066 11A3               70             ACALL LCD_sendchar
                        71
                        72
                        73     Start:
0068 00                 74             NOP
                        75     Loop1:
                        76             ;CLR P1.0
                        77             ;SETB P1.0
                        78             ;NOP
                        79             ;JB P1.0,Start
0069 80FD               80             JMP Start
                        81
                        82
                        83     ;------------------------------------------------------------------
                        84     ; Subroutines Library
                        85     ;------------------------------------------------------------------
                 =1     86     INCLUDE lcd.inc
                 =1     87     ;Some of web
                 =1     88     ;https://www.8051projects.net/lcd-interfacing/introduction.php
                 =1     89
                 =1     90     ;===============Initialisation constant================================
  0030           =1     91     FUNC_8BIT_1L    EQU 30H
  0038           =1     92     FUNC_8BIT_2L    EQU 38H
  0020           =1     93     FUNC_4BIT_1L    EQU 20H
  0028           =1     94     FUNC_4BIT_2L    EQU 28H
                 =1     95     ;================Comand definition=====================================
  000C           =1     96     DISP_ON         EQU 0CH
  000E           =1     97     DISP_ON_CUR     EQU 0EH
  000F           =1     98     DISP_ON_BLK     EQU 0FH
  0008           =1     99     DISP_OFF        EQU 08H
  0001           =1    100     CLR_DISP        EQU 01H
                 =1    101
  0006           =1    102     ENTRY_INC       EQU 06H
  0007           =1    103     ENTRY_INC_S     EQU 07H
  0004           =1    104     ENTRY_DEC       EQU 04H
  0005           =1    105     ENTRY_DEC_S     EQU 05H
                 =1    106
                 =1    107     ;=================Disp addresses=======================================
  0080           =1    108     DD_RAM_ADDR1    EQU 80H ;First line start address
  00C0           =1    109     DD_RAM_ADDR2    EQU 0C0H ;Second line start address
  0094           =1    110     DD_RAM_ADDR3    EQU 94H ;Third line start address on 20x4 lcds
  00D4           =1    111     DD_RAM_ADDR4    EQU 0D4H ;Fourth line start address on 20x4 lcds
                 =1    112
  0040           =1    113     CG_RAM_ADDR     EQU 40H
                 =1    114     ;
                 =1    115
                 =1    116
                 =1    117     ; uncoment and comment the number of data bits
                 =1    118     ;=================================================================
                 =1    119
                 =1    120     ;data_bit set 8
                 =1    121     ;data_bit set 4
                 =1    122     ;=================================================================
                 =1    123
                 =1    124     ;=================================================================
                 =1    125     ; SUB ROUTINES FOR 8 BIT MODE
                 =1    126     ;=================================================================
                 =1    127     ;if (data_bit=8)
                 =1    128
                 =1    129     ; Here define the pins you use for LCD control in 8 bit mode
  00A0           =1    130     LCD_data equ P2    ;LCD Data port
  00A7           =1    131     LCD_D7   equ P2.7  ;LCD D7/Busy Flag
  0090           =1    132     LCD_rs   equ P1.0  ;LCD Register Select
  0091           =1    133     LCD_rw   equ P1.1  ;LCD Read/Write
  0092           =1    134     LCD_en   equ P1.2  ;LCD Enable
                 =1    135
                 =1    136
                 =1    137
                 =1    138     LCD_Init:
                 =1    139     ;----------------------------------------------------------------------
006B C290        =1    140             clr LCD_rs
006D C291        =1    141             clr LCD_rw
006F C292        =1    142             clr LCD_en
                 =1    143
0071 7414        =1    144             mov A,#20
0073 75F000      =1    145             mov B,#0
                 =1    146             ;acall Wait_mS ;Wait 20 mS
0076 75A030      =1    147             mov  LCD_data,#00110000B
0079 D292        =1    148             setb LCD_en
007B C292        =1    149             clr  LCD_en
                 =1    150
007D 7406        =1    151             mov A,#6
007F 75F000      =1    152             mov B,#0
                 =1    153             ;acall Wait_mS ;Wait 6 mS
0082 75A038      =1    154             mov  LCD_data,#FUNC_8BIT_2L
0085 D292        =1    155             setb LCD_en
0087 C292        =1    156             clr  LCD_en
                 =1    157
0089 7408        =1    158             mov A,#DISP_OFF
008B 1196        =1    159             acall LCD_command
                 =1    160
008D 740C        =1    161             mov A,#DISP_ON
008F 1196        =1    162             acall LCD_command
                 =1    163
0091 7406        =1    164             mov A,#ENTRY_INC
0093 1196        =1    165             acall LCD_command
                 =1    166
0095 22          =1    167             ret
                 =1    168     ;----------------------------------------------------------------------
                 =1    169
                 =1    170
                 =1    171     ;======================================================================
                 =1    172
                 =1    173     ;Ports used are same as the previous example
                 =1    174     ;Routine to send command to LCD
                 =1    175
                 =1    176     LCD_command:
0096 F5A0        =1    177              mov   LCD_data,A     ;Move the command to LCD port
0098 C290        =1    178              clr   LCD_rs         ;Selected command register
009A C291        =1    179              clr   LCD_rw         ;We are writing in instruction register
009C D292        =1    180              setb  LCD_en         ;Enable H->
                 =1    181
009E C292        =1    182              clr   LCD_en
00A0 11C8        =1    183              acall LCD_busy       ;Wait for LCD to process the command
00A2 22          =1    184              ret                  ;Return from busy routine
                 =1    185
                 =1    186
                 =1    187     ;======================================================================
                 =1    188     ;Ports used are same as the previous example
                 =1    189     ;Routine to send data (single character) to LCD
                 =1    190
                 =1    191     LCD_sendchar:
00A3 F5A0        =1    192              mov   LCD_data,A     ;Move the command to LCD port
00A5 D290        =1    193              setb  LCD_rs         ;Selected data register
00A7 C291        =1    194              clr   LCD_rw         ;We are writing
00A9 D292        =1    195              setb  LCD_en         ;Enable H->
                 =1    196
00AB C292        =1    197              clr   LCD_en
00AD 11C8        =1    198              acall LCD_busy       ;Wait for LCD to process the data
00AF 22          =1    199              ret                  ;Return from busy routine
                 =1    200
                 =1    201
                 =1    202     ;=======================================================================
                 =1    203     ; SUBROUTINES FOR 4 BIT MODE
                 =1    204     ;=======================================================================
                 =1    205
                 =1    206
                 =1    207     ;elseif(data_bit=4)
                 =1    208
                 =1    209     ; Here define the pins you use for LCD control in 8 bit mode
                 =1    210
                 =1    211     ;LCD_D4  equ P1.4   ;LCD Data line 1
                 =1    212     ;LCD_D5  equ P1.5   ;LCD Data line 2
                 =1    213     ;LCD_D6  equ P1.6   ;LCD Data line 3
                 =1    214     ;LCD_D7   equ P1.7   ;LCD D7/Busy Flag
                 =1    215
                 =1    216     ;LCD_rs   equ P1.0  ;LCD Register Select
                 =1    217     ;LCD_rw   equ P1.1  ;LCD Read/Write
                 =1    218     ;LCD_en   equ P1.2  ;LCD Enable
                 =1    219
                 =1    220
                 =1    221     ;endif
                 =1    222     ;======================================================================
                 =1    223     LCD_buildchar:
                 =1    224
00B0 7440        =1    225             MOV A,#40H
00B2 1196        =1    226             ACALL LCD_command
                 =1    227
00B4 7807        =1    228             MOV R0,#7
                 =1    229     NEXT_data:
00B6 E4          =1    230             CLR A
00B7 93          =1    231             MOVC A,@A+DPTR
00B8 11A3        =1    232             ACALL LCD_sendchar
00BA A3          =1    233             INC DPTR
00BB D8F9        =1    234             DJNZ R0,NEXT_data
00BD 22          =1    235             RET
                 =1    236
                 =1    237
                 =1    238     ;======================================================================
                 =1    239     LCD_sendstr:
                 =1    240
00BE E4          =1    241             CLR A
00BF 93          =1    242             MOVC A,@A+DPTR
00C0 6005        =1    243             JZ EXIT_sendstr
00C2 11A3        =1    244             ACALL LCD_sendchar
00C4 A3          =1    245             INC DPTR
00C5 80F7        =1    246             JMP LCD_sendstr
                 =1    247     EXIT_sendstr:
00C7 22          =1    248             RET
                 =1    249     ;=======================================================================
                 =1    250     LCD_busy:
00C8 D2A7        =1    251              setb   LCD_D7        ;Make D7th bit of LCD data port as i/p
00CA D292        =1    252              setb   LCD_en        ;Make port pin as o/p
00CC C290        =1    253              clr    LCD_rs        ;Select command register
00CE D291        =1    254              setb   LCD_rw        ;we are reading
                 =1    255     check:
00D0 C292        =1    256              clr    LCD_en        ;Enable H->
00D2 E5A0        =1    257              mov    A,LCD_data
00D4 D292        =1    258              setb   LCD_en
00D6 20E7F7      =1    259              jb     A.7,check     ;read busy flag again and again till it becomes 0
00D9 22          =1    260              ret                  ;Return from busy routine
                 =1    261
                 =1    262     ;------------------------Subroutines for delay-------------------------
                 =2    263     INCLUDE delay.inc
                 =2    264     ;======================================================================
                 =2    265     ;Library with soubroutnes for delay function no need of hardware timers
                 =2    266     ;All delay are calculated for 12 MHz Clock frequency
                 =2    267     ;
                 =2    268     ;Date: 21.04.2021               Author: S. Banchev
                 =2    269     ;Source: https://github.com/sbch01/8051/
                 =2    270     ;======================================================================
                 =2    271
                 =2    272
                 =2    273     ;----------------------------------------------------------------------
                 =2    274     ; Subroutine wait uS
                 =2    275     ;----------------------------------------------------------------------
                 =2    276     Wait_uS: ;loop aprox A value in uS
00DA 13          =2    277             RRC A ; divide by two loded in A value
                 =2    278     Wait_uSx2: ;loop aprox A value  x2 in uS
00DB D5E0FD      =2    279             DJNZ A,$ ;
00DE 22          =2    280             RET
                 =2    281     ;----------------------------------------------------------------------
                 =2    282
                 =2    283     ;----------------------------------------------------------------------
                 =2    284     ; Subroutine wait mS
                 =2    285     ;----------------------------------------------------------------------
                 =2    286     ;Load A and B register with your delay needs
                 =2    287     ;A register is low byte digit and B register is high byte register
                 =2    288     ;Always check value in two register before call subroutine
                 =2    289     ;Max delay is 65535 mS if A=0xff and B=0xff
                 =2    290     Wait_mS:
00DF 05F0        =2    291             INC B
                 =2    292     Loop_mS:
00E1 78F9        =2    293             MOV R0,#249
00E3 D8FE        =2    294             DJNZ R0,$
00E5 78F9        =2    295             MOV R0,#249
00E7 D8FE        =2    296             DJNZ R0,$
00E9 D5E0F5      =2    297             DJNZ A,Loop_mS
00EC D5F0F2      =2    298             DJNZ B,Loop_mS
00EF 22          =2    299             RET
                       300
                       301     ORG 0200H
                       302     ;----------------String constants----------------------------------
0200 3830353120        303     STR1:DB '8051 is Legend!',0
     6973204C65
     67656E6421
     00
                       304     ;----------------Custom charter constant---------------------------
0210 040E0E0E1F        305     BELL:DB 00100b, 01110b, 01110b, 01110b, 11111b, 00000b, 00100b, 00000b
     000400
                       306             END
ASSEMBLY COMPLETE, NO ERRORS FOUND, NO WARNINGS


SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0149H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H  NOT USED
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BELL . . . . . . . . . . . . . . . .  C  ADDR  0210H
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CG_RAM_ADDR. . . . . . . . . . . . .  N  NUMB  0040H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CHECK. . . . . . . . . . . . . . . .  C  ADDR  00D0H
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CLR_DISP . . . . . . . . . . . . . .  N  NUMB  0001H
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H  NOT USED
DD_RAM_ADDR1 . . . . . . . . . . . .  N  NUMB  0080H
DD_RAM_ADDR2 . . . . . . . . . . . .  N  NUMB  00C0H
DD_RAM_ADDR3 . . . . . . . . . . . .  N  NUMB  0094H  NOT USED
DD_RAM_ADDR4 . . . . . . . . . . . .  N  NUMB  00D4H  NOT USED
DECRES . . . . . . . . . . . . . . .  N  NUMB  0030H  NOT USED
DISP_OFF . . . . . . . . . . . . . .  N  NUMB  0008H
DISP_ON. . . . . . . . . . . . . . .  N  NUMB  000CH
DISP_ON_BLK. . . . . . . . . . . . .  N  NUMB  000FH  NOT USED
DISP_ON_CUR. . . . . . . . . . . . .  N  NUMB  000EH
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH  NOT USED
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
ENTRY_DEC. . . . . . . . . . . . . .  N  NUMB  0004H  NOT USED
ENTRY_DEC_S. . . . . . . . . . . . .  N  NUMB  0005H  NOT USED
ENTRY_INC. . . . . . . . . . . . . .  N  NUMB  0006H
ENTRY_INC_S. . . . . . . . . . . . .  N  NUMB  0007H  NOT USED
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H  NOT USED
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXIT_SENDSTR . . . . . . . . . . . .  C  ADDR  00C7H
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
FUNC_4BIT_1L . . . . . . . . . . . .  N  NUMB  0020H  NOT USED
FUNC_4BIT_2L . . . . . . . . . . . .  N  NUMB  0028H  NOT USED
FUNC_8BIT_1L . . . . . . . . . . . .  N  NUMB  0030H  NOT USED
FUNC_8BIT_2L . . . . . . . . . . . .  N  NUMB  0038H
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H  NOT USED
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
INITIAL. . . . . . . . . . . . . . .  C  ADDR  0030H
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H  NOT USED
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
LCD_BUILDCHAR. . . . . . . . . . . .  C  ADDR  00B0H
LCD_BUSY . . . . . . . . . . . . . .  C  ADDR  00C8H
LCD_COMMAND. . . . . . . . . . . . .  C  ADDR  0096H
LCD_D7 . . . . . . . . . . . . . . .  N  NUMB  00A7H
LCD_DATA . . . . . . . . . . . . . .  N  NUMB  00A0H
LCD_EN . . . . . . . . . . . . . . .  N  NUMB  0092H
LCD_INIT . . . . . . . . . . . . . .  C  ADDR  006BH
LCD_RS . . . . . . . . . . . . . . .  N  NUMB  0090H
LCD_RW . . . . . . . . . . . . . . .  N  NUMB  0091H
LCD_SENDCHAR . . . . . . . . . . . .  C  ADDR  00A3H
LCD_SENDSTR. . . . . . . . . . . . .  C  ADDR  00BEH
LOOP1. . . . . . . . . . . . . . . .  C  ADDR  0069H  NOT USED
LOOP_MS. . . . . . . . . . . . . . .  C  ADDR  00E1H
MYBIT. . . . . . . . . . . . . . . .  N  NUMB  0002H  NOT USED
NEXT_DATA. . . . . . . . . . . . . .  C  ADDR  00B6H
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H  NOT USED
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H  NOT USED
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H  NOT USED
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H  NOT USED
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H  NOT USED
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H  NOT USED
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H  NOT USED
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H  NOT USED
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
START. . . . . . . . . . . . . . . .  C  ADDR  0068H
STR1 . . . . . . . . . . . . . . . .  C  ADDR  0200H
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H  NOT USED
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH  NOT USED
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH  NOT USED
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH  NOT USED
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H  NOT USED
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH  NOT USED
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH  NOT USED
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H  NOT USED
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH  NOT USED
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH  NOT USED
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
WAIT_MS. . . . . . . . . . . . . . .  C  ADDR  00DFH  NOT USED
WAIT_US. . . . . . . . . . . . . . .  C  ADDR  00DAH  NOT USED
WAIT_USX2. . . . . . . . . . . . . .  C  ADDR  00DBH  NOT USED
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED