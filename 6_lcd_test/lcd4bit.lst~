lcd4bit                                                                                                                 PAGE 1
                         1     ;Some of web
****WARNING:Missing`END'directive
                         2     ;https://www.8051projects.net/lcd-interfacing/introduction.php
                         3
                         4     ;===============Initialisation constant================================
  0030                   5     FUNC_8BIT_1L    EQU 30H
  0038                   6     FUNC_8BIT_2L    EQU 38H
  0020                   7     FUNC_4BIT_1L    EQU 20H
  0028                   8     FUNC_4BIT_2L    EQU 28H
                         9     ;================Comand definition=====================================
  000C                  10     DISP_ON         EQU 0CH
  000E                  11     DISP_ON_CUR     EQU 0EH
  000F                  12     DISP_ON_BLK     EQU 0FH
  0008                  13     DISP_OFF        EQU 08H
  0001                  14     CLR_DISP        EQU 01H
                        15
  0006                  16     ENTRY_INC       EQU 06H
  0007                  17     ENTRY_INC_S     EQU 07H
  0004                  18     ENTRY_DEC       EQU 04H
  0005                  19     ENTRY_DEC_S     EQU 05H
                        20
                        21     ;=================Disp addresses=======================================
  0080                  22     DD_RAM_ADDR1    EQU 80H ;First line start address
  00C0                  23     DD_RAM_ADDR2    EQU 0C0H ;Second line start address
  0094                  24     DD_RAM_ADDR3    EQU 94H ;Third line start address on 20x4 lcds
  00D4                  25     DD_RAM_ADDR4    EQU 0D4H ;Fourth line start address on 20x4 lcds
                        26
  0040                  27     CG_RAM_ADDR     EQU 40H
                        28
                        29     temp equ R0
                        30     ;================Initial LCD in 4 bit mode=============================
                        31     ;In this whole 4-bit tutorial LCD is connected to
                        32     ;my controller in following way...
                        33     ;D4 - P3.0
                        34     ;D5 - P3.1
                        35     ;D6 - P3.2
                        36     ;D7 - P3.3
                        37     ;EN - P3.7
                        38     ;RS - P3.5
                        39
  00B0                  40             lcd_port equ P3     ;LCD connected to Port3
  00B7                  41             en       equ P3.7   ;Enable connected to P3.7
  00B5                  42             rs       equ P3.5   ;Register select to P3.5
                        43
                        44     lcd_reset:                  ;LCD reset sequence
0000 75B0FF             45             mov lcd_port, #0FFH
0003 7414               46             mov A,#20           ;20mS delay
0005 75F000             47             mov B,#0
0008 1193               48             acall Wait_mS
000A 75B083             49             mov lcd_port, #83H  ;Data = 30H, EN = 1, First Init
000D 75B003             50             mov lcd_port, #03H  ;Data = 30H, EN = 0
                        51
0010 740F               52             mov A,#15           ;15mS delay
0012 75F000             53             mov B,#0
0015 1193               54             acall Wait_mS
                        55
0017 75B083             56             mov lcd_port, #83H ;Second Init, Data = 30H, EN = 1
                        57
001A 75B003             58             mov lcd_port, #03H ;Data = 30H, EN = 0
                        59
001D 7405               60             mov A,#5           ;5mS delay
001F 75F000             61             mov B,#0
0022 1193               62             acall Wait_mS
                        63
0024 75B083             64             mov lcd_port, #83H ;Third Init
                        65
0027 75B003             66             mov lcd_port, #03H
                        67
002A 7405               68             mov A,#5           ;5mS delay
002C 75F000             69             mov B,#0
002F 1193               70             acall Wait_mS
                        71
0031 75B082             72             mov lcd_port, #82H ;Select Data width (20H for 4bit)
0034 75B002             73             mov lcd_port, #02H ;Data = 20H, EN = 0
                        74
0037 7405               75             mov A,#5           ;5mS delay
0039 75F000             76             mov B,#0
003C 1193               77             acall Wait_mS
003E 22                 78             ret
                        79
                        80
                        81     lcd_init:
003F 1100               82             acall lcd_reset         ;Call LCD Reset sequence
0041 7428               83             mov a,#28H              ;4-bit, 2 line, 5x7 dots
                        84
0043 1152               85             acall lcd_cmd           ;Call LCD command
0045 740C               86             mov a,#0CH              ;Display ON cursor OFF
0047 1152               87             acall lcd_cmd           ;Call LCD command
0049 7406               88             mov a,#06H              ;Set entry mode (Auto increment)
                        89
004B 1152               90             acall lcd_cmd           ;Call LCD command
004D 7480               91             mov a,#80H              ;Bring cursor to line 1
004F 1152               92             acall lcd_cmd           ;Call LCD command
0051 22                 93             ret
                        94     ;=====================Cmand send to LCD================================
                        95     lcd_cmd:                      ;LCD command Routine
0052 F8                 96             mov temp,a            ;Save a copy of command to temp
0053 C4                 97             swap a                ;Swap to use higher nibble
0054 540F               98             anl a,#0FH            ;Mask the first four bits
0056 2480               99             add a,#80H            ;Enable = 1, RS = 0
0058 F5B0              100             mov lcd_port,a        ;Move it to lcd port
005A 540F              101             anl a,#0FH            ;Enable = 0, RS = 0
005C F5B0              102             mov lcd_port,a        ;Move to lcd port
                       103
005E E8                104             mov a,temp            ;Reload the command from temp
005F 540F              105             anl a,#0FH            ;Mask first four bits
0061 2480              106             add a,#80H            ;Enable = 1
0063 F5B0              107             mov lcd_port,a        ;Move to port
0065 540F              108             anl a,#0FH            ;Enable = 0
0067 F5B0              109             mov lcd_port,a        ;Move to lcd port
                       110
0069 7401              111             mov A,#1           ;1mS delay
006B 75F000            112             mov B,#0
006E 1193              113             acall Wait_mS
0070 22                114             ret
                       115     ;==================Chartar send to LCD=================================
                       116     lcd_dat:                  ;LCD data Routine
0071 F8                117             mov temp,a            ;Keep copy of data in temp
0072 C4                118             swap a                ;We need higher nibble
0073 540F              119             anl a,#0FH            ;Mask first four bits
0075 24A0              120             add a,#0A0H           ;Enable = 1, RS = 1
0077 F5B0              121             mov lcd_port,a        ;Move to lcd port
0079 00                122             nop
007A C2B7              123             clr en                ;Enable = 0
                       124
007C E8                125             mov a,temp            ;Reload the data from temp
007D 540F              126             anl a,#0FH            ;we need lower nibble now
007F 24A0              127             add a,#0A0H           ;Enable = 1, RS = 1
0081 F5B0              128             mov lcd_port,a        ;Move to lcd port
0083 00                129             nop
0084 C2B7              130             clr en                ;Enable = 0
                       131
0086 7401              132             mov A,#1           ;1mS delay
0088 75F000            133             mov B,#0
008B 1193              134             acall Wait_mS
                       135
008D 22                136             ret
                       137
                       138     ;------------------------Subroutines for delay-------------------------
                 =1    139     INCLUDE delay.inc
                 =1    140     ;======================================================================
                 =1    141     ;Library with soubroutnes for delay function no need of hardware timers
                 =1    142     ;All delay are calculated for 12 MHz Clock frequency
                 =1    143     ;
                 =1    144     ;Date: 21.04.2021               Author: S. Banchev
                 =1    145     ;Source: https://github.com/sbch01/8051/
                 =1    146     ;======================================================================
                 =1    147
                 =1    148
                 =1    149     ;----------------------------------------------------------------------
                 =1    150     ; Subroutine wait uS
                 =1    151     ;----------------------------------------------------------------------
                 =1    152     Wait_uS: ;loop aprox A value in uS
008E 13          =1    153             RRC A ; divide by two loded in A value
                 =1    154     Wait_uSx2: ;loop aprox A value  x2 in uS
008F D5E0FD      =1    155             DJNZ A,$ ;
0092 22          =1    156             RET
                 =1    157     ;----------------------------------------------------------------------
                 =1    158
                 =1    159     ;----------------------------------------------------------------------
                 =1    160     ; Subroutine wait mS
                 =1    161     ;----------------------------------------------------------------------
                 =1    162     ;Load A and B register with your delay needs
                 =1    163     ;A register is low byte digit and B register is high byte register
                 =1    164     ;Always check value in two register before call subroutine
                 =1    165     ;Max delay is 65535 mS if A=0xff and B=0xff
                 =1    166     Wait_mS:
0093 05F0        =1    167             INC B
                 =1    168     Loop_mS:
0095 78F9        =1    169             MOV R0,#249
0097 D8FE        =1    170             DJNZ R0,$
0099 78F9        =1    171             MOV R0,#249
009B D8FE        =1    172             DJNZ R0,$
009D D5E0F5      =1    173             DJNZ A,Loop_mS
00A0 D5F0F2      =1    174             DJNZ B,Loop_mS
00A3 22          =1    175             RET
ASSEMBLY COMPLETE, NO ERRORS FOUND, 1 WARNING


ERROR SUMMARY:
Line 1, WARNING:Missing`END'directive

SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0149H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H  NOT USED
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CG_RAM_ADDR. . . . . . . . . . . . .  N  NUMB  0040H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CLR_DISP . . . . . . . . . . . . . .  N  NUMB  0001H  NOT USED
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H  NOT USED
DD_RAM_ADDR1 . . . . . . . . . . . .  N  NUMB  0080H  NOT USED
DD_RAM_ADDR2 . . . . . . . . . . . .  N  NUMB  00C0H  NOT USED
DD_RAM_ADDR3 . . . . . . . . . . . .  N  NUMB  0094H  NOT USED
DD_RAM_ADDR4 . . . . . . . . . . . .  N  NUMB  00D4H  NOT USED
DISP_OFF . . . . . . . . . . . . . .  N  NUMB  0008H  NOT USED
DISP_ON. . . . . . . . . . . . . . .  N  NUMB  000CH  NOT USED
DISP_ON_BLK. . . . . . . . . . . . .  N  NUMB  000FH  NOT USED
DISP_ON_CUR. . . . . . . . . . . . .  N  NUMB  000EH  NOT USED
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH  NOT USED
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
EN . . . . . . . . . . . . . . . . .  N  NUMB  00B7H
ENTRY_DEC. . . . . . . . . . . . . .  N  NUMB  0004H  NOT USED
ENTRY_DEC_S. . . . . . . . . . . . .  N  NUMB  0005H  NOT USED
ENTRY_INC. . . . . . . . . . . . . .  N  NUMB  0006H  NOT USED
ENTRY_INC_S. . . . . . . . . . . . .  N  NUMB  0007H  NOT USED
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H  NOT USED
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
FUNC_4BIT_1L . . . . . . . . . . . .  N  NUMB  0020H  NOT USED
FUNC_4BIT_2L . . . . . . . . . . . .  N  NUMB  0028H  NOT USED
FUNC_8BIT_1L . . . . . . . . . . . .  N  NUMB  0030H  NOT USED
FUNC_8BIT_2L . . . . . . . . . . . .  N  NUMB  0038H  NOT USED
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H  NOT USED
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H  NOT USED
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
LCD_CMD. . . . . . . . . . . . . . .  C  ADDR  0052H
LCD_DAT. . . . . . . . . . . . . . .  C  ADDR  0071H  NOT USED
LCD_INIT . . . . . . . . . . . . . .  C  ADDR  003FH  NOT USED
LCD_PORT . . . . . . . . . . . . . .  N  NUMB  00B0H
LCD_RESET. . . . . . . . . . . . . .  C  ADDR  0000H
LOOP_MS. . . . . . . . . . . . . . .  C  ADDR  0095H
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H  NOT USED
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H  NOT USED
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H  NOT USED
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H  NOT USED
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H  NOT USED
RS . . . . . . . . . . . . . . . . .  N  NUMB  00B5H  NOT USED
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H  NOT USED
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H  NOT USED
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H  NOT USED
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H  NOT USED
TEMP . . . . . . . . . . . . . . . .  S  SPEC  R0
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH  NOT USED
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH  NOT USED
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH  NOT USED
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H  NOT USED
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH  NOT USED
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH  NOT USED
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H  NOT USED
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH  NOT USED
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH  NOT USED
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
WAIT_MS. . . . . . . . . . . . . . .  C  ADDR  0093H
WAIT_US. . . . . . . . . . . . . . .  C  ADDR  008EH  NOT USED
WAIT_USX2. . . . . . . . . . . . . .  C  ADDR  008FH  NOT USED
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED