;-----------------------------------------------------------------------------------------
;Това е пример на асемблер в , който е демонстрирано различни инструкции за преместване и
; адресиране на паммета на микроконтролер 8051
; Разгледани са и инструкции за маниполация с битове
;
;23.03.2021 		Автор: С. Банчев
;-----------------------------------------------------------------------------------------

ORG	0000H 	;място на което се установява PC след рестарт
	SJMP START

	
;ORG 	000BH	;място от програмната памет където се разполага 
;	SJMP TMR0_INTR	;вектора на прекъсване от таймер 0

;ORG	001BH	;място от програмната памет където се разполага 
;	SJMP TMR1_INTR	;вектора на прекъсване от таймер 1

;ORG	0003H	;място от програмната памет където се разполага 
;	SJMP INT0_INTR ;вектора на прекъсване от външен източник 0

;ORG	0013H ;място от програмната памет където се разполага 
;	SJMP INT1_INTR	;вектора на прекъсване от външен източник 1

;ORG	0023H	;място от програмната памет където се разполага 
;	SJMP UART_INT	;вектора на прекъсване от асинхрония приемо предавател на данни


MYBYTE EQU 30H	;Директива за дефиниране на константа
MYBIT	EQU 02H
ORG	0030H	;Започване на стартовата програма от адрес 30H на програмната памет

	;Демонстрация на превключването на банките и използването на регистри R0 до R7
	;-----------------------------------------------------------------------------
START: 	MOV SP,#20H	;Зареждане на адрес на указатела на стека
	MOV R0,#02H	;Зареждане на регистри р0 до р7 в банка 0
	MOV R1,#03H
	MOV R2,#04H
	MOV R3,#05H
	MOV R4,#06H
	MOV R5,#07H
	MOV R6,#08H
	MOV R7,#09H

	SETB RS0	;избор на банка 1

	MOV R0,#12H	;Зареждане на регистри р0 до р7 в банка 1
	MOV R1,#13H
	MOV R2,#14H
	MOV R3,#15H
	MOV R4,#16H
	MOV R5,#17H
	MOV R6,#18H
	MOV R7,#19H

	CPL RS0		;Избор на банка 2 +2
	CPL RS1

	MOV R0,#22H	;Зареждане на регистри р0 до р7 в банка 2
	MOV R1,#23H
	MOV R2,#24H
	MOV R3,#25H
	MOV R4,#26H
	MOV R5,#27H
	MOV R6,#28H
	MOV R7,#29H

	SETB RS0	;Избор на банка 3

	MOV R0,#32H	;Зареждане на регистри р0 до р7 в банка 3
	MOV R1,#33H
	MOV R2,#34H
	MOV R3,#35H
	MOV R4,#36H
	MOV R5,#37H
	MOV R6,#38H
	MOV R7,#39H

	CLR RS0		;Избор на банка 0 +2
	CLR RS1

	;Използване на константата
	;-------------------------------------------------
	MOV MYBYTE,#12H	;зареждане на 0х12 на адрес MYBYTE

	PUSH MYBYTE	;поставяне в стека на стойността съдържаща се на адрес MYBYTE
	PUSH 04H	;поставяне в стека на стойността съдържаща се на адрес 0х04
	MOV A,#11H	;зареждане в акумулатора стойността 0х11
	PUSH 20H	;поставяне в стека на стойността съдържаща се на сдрес 0х20
	MOV A,#00H	;зареждане в акумулатора стойността 0х00
	POP ACC		;зареждане на последната стойност от стека в акъмулатора
	POP ACC		;зареждане на последната стойност от стека в акъмулатора
	POP ACC		;зареждане на последната стойност от стека в акъмулатора

	; Демонстрация на различните видове адресиране
	;-------------------------------------------------
	MOV ACC,@R0	;зареждане в акумулатора стойността съдържаща се на адреса, който се съдържа в R0
	MOV ACC,04H	;зареждане в акумулатора стойността намираща се на адрес 0х04
	MOV ACC,#1FH	;зареждане в акумулатора константата 0х1F
	MOV ACC,#MYBYTE	;зареждане в акумулатора константата MYBYTE

	; Демонстрация на побитово адресиране на пространството от 0х20 до 0х2F
	SETB 00H
	SETB MYBIT

	NOP	;LOOP HERE +2
	SJMP $-1

	DB 'HELLO WORLD'
	END
